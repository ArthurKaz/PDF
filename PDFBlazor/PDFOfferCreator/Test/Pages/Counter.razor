@page "/counter"

<PageTitle>Counter</PageTitle>

<h1>Counter</h1>

<p role="status">Current count: @currentCount</p>

<button class="btn btn-primary" @onclick="IncrementCount">Click me</button>

@code {
    private int currentCount = 0;

    private void IncrementCount()
    {
        DocumentCreatorByTemplate template = new DocumentCreatorByTemplate();


        template.Name = "none";
        template.Surname = "none";
        template.Street = "none";
        template.City = "none";

        ModuleType moduleType = (ModuleType)1;
        BatteryStorage batteryStorage = (BatteryStorage)1;
        template.ModuleType = GetModuleName(moduleType);
        template.BatteryStorage = GetBatteryStorageName(batteryStorage);
        template.ModuleTypePrice = GetModulePrice(moduleType);
        template.BatteryStoragePrice = GetBatteryStoragePrice(batteryStorage);

        template.GetPDFDataCreateDocument("D:\\Проєкти\\PDF\\PDF\\PDF\\bin\\Debug\\JUNO SOLAR.pdf", "C:\\Users\\kazuk\\OneDrive\\Робочий стіл\\result.pdf");

    }
    private string GetModuleName(ModuleType moduleType)
    {
        switch (moduleType)
        {
            case ModuleType.JinkoSolar:
                return "(Bsp. Jinko Solar)";
            case ModuleType.HeckertSolar:
                return "(Bsp. Heckert Solar)";
            case ModuleType.PhonoSolar:
                return "(Bsp. Phono Solar)";
            default: return null;
        }
    }
    private string GetModulePrice(ModuleType moduleType)
    {
        switch (moduleType)
        {
            case ModuleType.JinkoSolar:
                return "1.000€";
            case ModuleType.PhonoSolar:
                return "2.000€";
            case ModuleType.HeckertSolar:
                return "3.000€";

            default: return null;
        }
    }
    private string GetBatteryStorageName(BatteryStorage batteryStorage)
    {
        switch (batteryStorage)
        {
            case BatteryStorage.FivekWh: return "(Bsp. 5 kWh)";
            case BatteryStorage.TenkWh: return "(Bsp. 10 kWh)";
            case BatteryStorage.FifteenWh: return "(Bsp. 15 kWh)";
            default: return null;
        }
    }
    private string GetBatteryStoragePrice(BatteryStorage batteryStorage)
    {
        switch (batteryStorage)
        {
            case BatteryStorage.FivekWh: return "1.500€";
            case BatteryStorage.TenkWh: return "2.500€";
            case BatteryStorage.FifteenWh: return "3.500€";
            default: return null;
        }
    }
}
